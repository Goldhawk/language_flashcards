//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_Categories_Libraries", "Libraries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model.Library), "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.Category), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FlashcardCategories_Categories", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model.Category), "FlashcardCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.FlashcardCategory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_FlashcardCategories_Flashcards", "Flashcards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model.Flashcard), "FlashcardCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.FlashcardCategory), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_UsersFlashcards_Flashcards", "Flashcards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model.Flashcard), "UsersFlashcards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.UsersFlashcard), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_UsersFlashcards_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model.User), "UsersFlashcards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model.UsersFlashcard), true)]

#endregion

namespace Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FlashcardDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FlashcardDbEntities object using the connection string found in the 'FlashcardDbEntities' section of the application configuration file.
        /// </summary>
        public FlashcardDbEntities() : base("name=FlashcardDbEntities", "FlashcardDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FlashcardDbEntities object.
        /// </summary>
        public FlashcardDbEntities(string connectionString) : base(connectionString, "FlashcardDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FlashcardDbEntities object.
        /// </summary>
        public FlashcardDbEntities(EntityConnection connection) : base(connection, "FlashcardDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FlashcardCategory> FlashcardCategories
        {
            get
            {
                if ((_FlashcardCategories == null))
                {
                    _FlashcardCategories = base.CreateObjectSet<FlashcardCategory>("FlashcardCategories");
                }
                return _FlashcardCategories;
            }
        }
        private ObjectSet<FlashcardCategory> _FlashcardCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Flashcard> Flashcards
        {
            get
            {
                if ((_Flashcards == null))
                {
                    _Flashcards = base.CreateObjectSet<Flashcard>("Flashcards");
                }
                return _Flashcards;
            }
        }
        private ObjectSet<Flashcard> _Flashcards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Library> Libraries
        {
            get
            {
                if ((_Libraries == null))
                {
                    _Libraries = base.CreateObjectSet<Library>("Libraries");
                }
                return _Libraries;
            }
        }
        private ObjectSet<Library> _Libraries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersFlashcard> UsersFlashcards
        {
            get
            {
                if ((_UsersFlashcards == null))
                {
                    _UsersFlashcards = base.CreateObjectSet<UsersFlashcard>("UsersFlashcards");
                }
                return _UsersFlashcards;
            }
        }
        private ObjectSet<UsersFlashcard> _UsersFlashcards;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FlashcardCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlashcardCategories(FlashcardCategory flashcardCategory)
        {
            base.AddObject("FlashcardCategories", flashcardCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Flashcards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFlashcards(Flashcard flashcard)
        {
            base.AddObject("Flashcards", flashcard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Libraries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLibraries(Library library)
        {
            base.AddObject("Libraries", library);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersFlashcards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersFlashcards(UsersFlashcard usersFlashcard)
        {
            base.AddObject("UsersFlashcards", usersFlashcard);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="libraryId">Initial value of the LibraryId property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.String categoryName, global::System.Int32 libraryId)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.CategoryName = categoryName;
            category.LibraryId = libraryId;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LibraryId
        {
            get
            {
                return _LibraryId;
            }
            set
            {
                OnLibraryIdChanging(value);
                ReportPropertyChanging("LibraryId");
                _LibraryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LibraryId");
                OnLibraryIdChanged();
            }
        }
        private global::System.Int32 _LibraryId;
        partial void OnLibraryIdChanging(global::System.Int32 value);
        partial void OnLibraryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Categories_Libraries", "Libraries")]
        public Library Library
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("Model.FK_Categories_Libraries", "Libraries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("Model.FK_Categories_Libraries", "Libraries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Library> LibraryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Library>("Model.FK_Categories_Libraries", "Libraries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Library>("Model.FK_Categories_Libraries", "Libraries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FlashcardCategories_Categories", "FlashcardCategories")]
        public EntityCollection<FlashcardCategory> FlashcardCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlashcardCategory>("Model.FK_FlashcardCategories_Categories", "FlashcardCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlashcardCategory>("Model.FK_FlashcardCategories_Categories", "FlashcardCategories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Flashcard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Flashcard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Flashcard object.
        /// </summary>
        /// <param name="flashcardId">Initial value of the FlashcardId property.</param>
        /// <param name="question">Initial value of the Question property.</param>
        /// <param name="answer">Initial value of the Answer property.</param>
        public static Flashcard CreateFlashcard(global::System.Int32 flashcardId, global::System.String question, global::System.String answer)
        {
            Flashcard flashcard = new Flashcard();
            flashcard.FlashcardId = flashcardId;
            flashcard.Question = question;
            flashcard.Answer = answer;
            return flashcard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlashcardId
        {
            get
            {
                return _FlashcardId;
            }
            set
            {
                if (_FlashcardId != value)
                {
                    OnFlashcardIdChanging(value);
                    ReportPropertyChanging("FlashcardId");
                    _FlashcardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FlashcardId");
                    OnFlashcardIdChanged();
                }
            }
        }
        private global::System.Int32 _FlashcardId;
        partial void OnFlashcardIdChanging(global::System.Int32 value);
        partial void OnFlashcardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hint
        {
            get
            {
                return _Hint;
            }
            set
            {
                OnHintChanging(value);
                ReportPropertyChanging("Hint");
                _Hint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hint");
                OnHintChanged();
            }
        }
        private global::System.String _Hint;
        partial void OnHintChanging(global::System.String value);
        partial void OnHintChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FlashcardCategories_Flashcards", "FlashcardCategories")]
        public EntityCollection<FlashcardCategory> FlashcardCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FlashcardCategory>("Model.FK_FlashcardCategories_Flashcards", "FlashcardCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FlashcardCategory>("Model.FK_FlashcardCategories_Flashcards", "FlashcardCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UsersFlashcards_Flashcards", "UsersFlashcards")]
        public EntityCollection<UsersFlashcard> UsersFlashcards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersFlashcard>("Model.FK_UsersFlashcards_Flashcards", "UsersFlashcards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersFlashcard>("Model.FK_UsersFlashcards_Flashcards", "UsersFlashcards", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="FlashcardCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FlashcardCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FlashcardCategory object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="flashcardId">Initial value of the FlashcardId property.</param>
        public static FlashcardCategory CreateFlashcardCategory(global::System.Int32 id, global::System.Int32 categoryId, global::System.Int32 flashcardId)
        {
            FlashcardCategory flashcardCategory = new FlashcardCategory();
            flashcardCategory.id = id;
            flashcardCategory.CategoryId = categoryId;
            flashcardCategory.FlashcardId = flashcardId;
            return flashcardCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlashcardId
        {
            get
            {
                return _FlashcardId;
            }
            set
            {
                OnFlashcardIdChanging(value);
                ReportPropertyChanging("FlashcardId");
                _FlashcardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlashcardId");
                OnFlashcardIdChanged();
            }
        }
        private global::System.Int32 _FlashcardId;
        partial void OnFlashcardIdChanging(global::System.Int32 value);
        partial void OnFlashcardIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FlashcardCategories_Categories", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Model.FK_FlashcardCategories_Categories", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Model.FK_FlashcardCategories_Categories", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Model.FK_FlashcardCategories_Categories", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Model.FK_FlashcardCategories_Categories", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_FlashcardCategories_Flashcards", "Flashcards")]
        public Flashcard Flashcard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flashcard>("Model.FK_FlashcardCategories_Flashcards", "Flashcards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flashcard>("Model.FK_FlashcardCategories_Flashcards", "Flashcards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flashcard> FlashcardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flashcard>("Model.FK_FlashcardCategories_Flashcards", "Flashcards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flashcard>("Model.FK_FlashcardCategories_Flashcards", "Flashcards", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Library")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Library : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Library object.
        /// </summary>
        /// <param name="libraryId">Initial value of the LibraryId property.</param>
        /// <param name="libraryName">Initial value of the LibraryName property.</param>
        public static Library CreateLibrary(global::System.Int32 libraryId, global::System.String libraryName)
        {
            Library library = new Library();
            library.LibraryId = libraryId;
            library.LibraryName = libraryName;
            return library;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LibraryId
        {
            get
            {
                return _LibraryId;
            }
            set
            {
                if (_LibraryId != value)
                {
                    OnLibraryIdChanging(value);
                    ReportPropertyChanging("LibraryId");
                    _LibraryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LibraryId");
                    OnLibraryIdChanged();
                }
            }
        }
        private global::System.Int32 _LibraryId;
        partial void OnLibraryIdChanging(global::System.Int32 value);
        partial void OnLibraryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LibraryName
        {
            get
            {
                return _LibraryName;
            }
            set
            {
                OnLibraryNameChanging(value);
                ReportPropertyChanging("LibraryName");
                _LibraryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LibraryName");
                OnLibraryNameChanged();
            }
        }
        private global::System.String _LibraryName;
        partial void OnLibraryNameChanging(global::System.String value);
        partial void OnLibraryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Categories_Libraries", "Categories")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("Model.FK_Categories_Libraries", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("Model.FK_Categories_Libraries", "Categories", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String username, global::System.String password)
        {
            User user = new User();
            user.UserId = userId;
            user.Username = username;
            user.Password = password;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UsersFlashcards_Users", "UsersFlashcards")]
        public EntityCollection<UsersFlashcard> UsersFlashcards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersFlashcard>("Model.FK_UsersFlashcards_Users", "UsersFlashcards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersFlashcard>("Model.FK_UsersFlashcards_Users", "UsersFlashcards", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UsersFlashcard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersFlashcard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersFlashcard object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="flashcardId">Initial value of the FlashcardId property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        public static UsersFlashcard CreateUsersFlashcard(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 flashcardId, global::System.Int16 score)
        {
            UsersFlashcard usersFlashcard = new UsersFlashcard();
            usersFlashcard.id = id;
            usersFlashcard.UserId = userId;
            usersFlashcard.FlashcardId = flashcardId;
            usersFlashcard.Score = score;
            return usersFlashcard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FlashcardId
        {
            get
            {
                return _FlashcardId;
            }
            set
            {
                OnFlashcardIdChanging(value);
                ReportPropertyChanging("FlashcardId");
                _FlashcardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FlashcardId");
                OnFlashcardIdChanged();
            }
        }
        private global::System.Int32 _FlashcardId;
        partial void OnFlashcardIdChanging(global::System.Int32 value);
        partial void OnFlashcardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int16 _Score;
        partial void OnScoreChanging(global::System.Int16 value);
        partial void OnScoreChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UsersFlashcards_Flashcards", "Flashcards")]
        public Flashcard Flashcard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flashcard>("Model.FK_UsersFlashcards_Flashcards", "Flashcards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flashcard>("Model.FK_UsersFlashcards_Flashcards", "Flashcards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Flashcard> FlashcardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Flashcard>("Model.FK_UsersFlashcards_Flashcards", "Flashcards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Flashcard>("Model.FK_UsersFlashcards_Flashcards", "Flashcards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_UsersFlashcards_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.FK_UsersFlashcards_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.FK_UsersFlashcards_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.FK_UsersFlashcards_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model.FK_UsersFlashcards_Users", "Users", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
